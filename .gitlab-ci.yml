stages:
- build
- push

build:
    stage: build
    tags:
        - darwin
        - sierra
    artifacts:
        expire_in: 1 week
        paths:
            - out/packages
            - out/deletions
    script:
        # Pristine macOS
        - sudo mkdir -p /opt
        - sudo rm -rf /usr/local/*
        - sudo rm -rf /opt/*
        - echo > ~/.bashrc
        - echo > ~/.bash_profile
        # Setup Arch
        - curl -s -o /tmp/snapshot.tar.gz https://download.archmac.org/snapshots/archmac-snapshot-20180220194509.tar.gz
        - echo '20436b3984139c96590609ee136f2ef8fcb65d8096c1f21adc0aac3668ad43cc  /tmp/snapshot.tar.gz' | shasum -a 256 -c -
        - sudo tar -C / -xpzf /tmp/snapshot.tar.gz
        - echo 'Server = https://download.archmac.org/packages/$repo/sierra/$arch' | sudo tee /opt/arch/etc/pacman.d/mirrorlist
        - echo 'export PATH="/opt/arch/bin:/opt/arch/sbin:$PATH"' >> ~/.archrc
        - echo 'source ~/.archrc' | tee -a ~/.bashrc ~/.bash_profile > /dev/null
        # Update Arch
        - source ~/.archrc
        - sudo pacman --sync --refresh --noprogressbar
        - sudo pacman --sync --sysupgrade --noprogressbar --noconfirm --downloadonly
        - sudo pacman --sync --sysupgrade --noprogressbar --noconfirm
        - sudo pacman --sync --noprogressbar --noconfirm base-devel
        # Handle GitLab CI artifacts
        - sudo pacman --sync --noprogressbar --noconfirm gitlab-runner
        # Build Packages
        - .support/changes -u origin/master "${CI_COMMIT_SHA}" | .support/order
        - .support/build $(.support/changes -u origin/master "${CI_COMMIT_SHA}" | .support/order)
        # Copy packages
        - .support/copy $(.support/built) out/packages
        # Mark packages deletions
        - .support/changes -d origin/master "${CI_COMMIT_SHA}" | .support/order
        - .support/deleted $(.support/changes -b -d origin/master "${CI_COMMIT_SHA}") | tee out/deletions

push:
    stage: push
    tags:
        - darwin
        - sierra
    only:
        - master
    dependencies:
        - build
    script:
        # Pristine macOS
        - sudo mkdir -p /opt
        - sudo rm -rf /usr/local/*
        - sudo rm -rf /opt/*
        - echo > ~/.bashrc
        - echo > ~/.bash_profile
        # Add ssh privkey and remote host pubkey
        - mkdir -p ~/.ssh
        - touch ~/.ssh/id_rsa && chmod 0600 ~/.ssh/id_rsa
        - echo "${ARCH_PUSH_SSH_KEY}" > ~/.ssh/id_rsa
        - |
          cat >> ~/.ssh/known_hosts <<'EOF'
          download.archmac.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCRDDd1wxRN9dSZ9VS4P2UVsQE+IpO3jj3FUtOQcFVtzQnBRBucTXZ99/8masCy6gxAZ7JdY1+JxZKuiVmXuT6fP7JHedRUBuyR3hHtLFM1y6GRaJoJV0SBhgD8T4YT/yVk7TK/TIeUMon39XSdPcwD1aJMGCUB2NUClnXVfzElSoc+sabJepdH8ZfNeS+ChZpU/JvAjRKkjMlqW1GAsO5KmNPe9kgmM81weklYI36NImVaauBqgHZLVEbThSpKx59OLATXUFRuhBMAchcvbXGSUqfx3CiKtt3CSscsMAv40q648ohBVdGZ0XEdbNa6HSNKDTzmsllCFi6oSIWNGGMP
          EOF
        # Remove packages
        - .support/prune $(cat out/deletions) upload@download.archmac.org:packages
        # Upload packages
        - .support/push out/packages/* upload@download.archmac.org:packages
